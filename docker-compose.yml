---
version: '3.7'
services:
  ## Mongo Docker Compose Config
  mongo_db:
    container_name: mongo
    image: "mongo:4.4.3"
    restart: always
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./mongo-data:/data/db

  ## Keycloak Config with Mysql database
  keycloak-mysql:
    container_name: keycloak-mysql
    image: mysql:5.7
    volumes:
      - ./mysql_keycloak_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: keycloak
      MYSQL_USER: keycloak
      MYSQL_PASSWORD: password

  keycloak:
    container_name: keycloak
    image: quay.io/keycloak/keycloak:latest
    command: [ "start-dev", "--import-realm" ]
    environment:
      DB_VENDOR: MYSQL
      DB_ADDR: mysql
      DB_DATABASE: keycloak
      DB_USER: keycloak
      DB_PASSWORD: password
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    ports:
      - "8080:8080"
    volumes:
      - ./realms/:/opt/keycloak/data/import/
    depends_on:
      - keycloak-mysql

  ## Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  ## Eureka Server
  discovery-server:
    image: backendeveloper/discovery-server:latest
    container_name: discovery-server
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      - zipkin

  api-gateway:
    image: backendeveloper/api-gateway:latest
    container_name: api-gateway
    ports:
      - "8181:8080"
    expose:
      - "8181"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_SECURITY= TRACE
    depends_on:
      - zipkin
      - discovery-server
      - keycloak

  ## Company-Service Docker Compose Config
  company-service:
    container_name: company-service
    image: backendeveloper/company-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    links:
      - mongo_db:app_db
    depends_on:
      - mongo_db
      - zipkin
      - discovery-server
      - api-gateway

  ## Customer-Service Docker Compose Config
  customer-service:
    container_name: customer-service
    image: backendeveloper/customer-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    links:
      - mongo_db:app_db
    depends_on:
      - mongo_db
      - zipkin
      - discovery-server
      - api-gateway

  ## Delivery-Service Docker Compose Config
  delivery-service:
    container_name: delivery-service
    image: backendeveloper/delivery-service:latest
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    links:
      - mongo_db:app_db
    depends_on:
      - mongo_db
      - zipkin
      - discovery-server
      - api-gateway

  ## Prometheus
#  prometheus:
#    image: prom/prometheus:v2.37.1
#    container_name: prometheus
#    restart: always
#    ports:
#      - "9090:9090"
#    volumes:
#      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#    depends_on:
#      - product-service
#      - inventory-service
#      - order-service
#      - notification-service

#  grafana:
#    image: grafana/grafana-oss:8.5.2
#    container_name: grafana
#    restart: always
#    ports:
#      - "3000:3000"
#    links:
#      - prometheus:prometheus
#    volumes:
#      - ./grafana:/var/lib/grafana
#    environment:
#      - GF_SECURITY_ADMIN_USER=admin
#      - GF_SECURITY_ADMIN_PASSWORD=password
